<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>sekarjournal.bigdata.ml</groupId>
  <artifactId>sekarpublicmljournal</artifactId>
  <version>1.0</version>
  <name>${project.artifactId}</name>
  <description>Sekar ML Projects</description>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <encoding>UTF-8</encoding>
    <!-- this POM is for a Spark version 2.1.1 & scala version 2.11 (specifically 2.11.8) -->
    <scala.version>2.11.8</scala.version>
    <spark.version>2.1.1</spark.version>
    <scala.compat.version>2.11</scala.compat.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.specs2</groupId>
      <artifactId>specs2-core_${scala.compat.version}</artifactId>
      <version>2.4.16</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.compat.version}</artifactId>
      <version>3.0.4</version>
      <scope>test</scope>
    </dependency>

    <!--  Spark and related stuff -->
    <dependency>
    	<groupId>org.apache.spark</groupId>
    	<artifactId>spark-core_${scala.compat.version}</artifactId>
    	<version>${spark.version}</version>
    	<scope>provided</scope>
    </dependency>

	<!-- https://mvnrepository.com/artifact/org.apache.spark/spark-streaming_2.11 -->
	<dependency>
	    <groupId>org.apache.spark</groupId>
	    <artifactId>spark-streaming_${scala.compat.version}</artifactId>
	    <version>${spark.version}</version>
	    <scope>provided</scope>
	</dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.spark/spark-streaming-kafka-0-10_2.11 -->
	<dependency>
	    <groupId>org.apache.spark</groupId>
	    <artifactId>spark-streaming-kafka-0-10_${scala.compat.version}</artifactId>
	    <version>${spark.version}</version>
	    <scope>provided</scope>
	</dependency>

	<!-- https://mvnrepository.com/artifact/org.apache.spark/spark-sql_2.11 -->
	<dependency>
	    <groupId>org.apache.spark</groupId>
	    <artifactId>spark-sql_${scala.compat.version}</artifactId>
	    <version>${spark.version}</version>
	    <scope>provided</scope>
	</dependency>

	<!-- https://mvnrepository.com/artifact/com.databricks/spark-xml_2.11 -->
	<dependency>
	    <groupId>com.databricks</groupId>
	    <artifactId>spark-xml_${scala.compat.version}</artifactId>
	    <version>0.4.1</version>
	</dependency>

	<dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-hive_${scala.compat.version}</artifactId>
        <version>${spark.version}</version>
        <scope>provided</scope>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.apache.spark/spark-mllib_2.11 -->
    <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-mllib_${scala.compat.version}</artifactId>
        <version>${spark.version}</version>
        <scope>provided</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients -->
    <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>0.10.1.1</version>
        <scope>provided</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-lang/commons-lang -->
	<dependency>
	    <groupId>commons-lang</groupId>
	    <artifactId>commons-lang</artifactId>
	    <version>2.6</version>
	</dependency>

	<!-- https://mvnrepository.com/artifact/com.typesafe/config -->
	<dependency>
	    <groupId>com.typesafe</groupId>
	    <artifactId>config</artifactId>
	    <version>1.3.1</version>
	</dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <!-- see http://davidb.github.com/scala-maven-plugin -->
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <args>
                <arg>-dependencyfile</arg>
                <arg>${project.build.directory}/.scala_dependencies</arg>
              </args>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <useFile>false</useFile>
          <disableXmlReport>true</disableXmlReport>
          <!-- If you have classpath issue like NoDefClassError,... -->
          <!-- useManifestOnlyJar>false</useManifestOnlyJar -->
          <includes>
            <include>**/*Test.*</include>
            <include>**/*Suite.*</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
